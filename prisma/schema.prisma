generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id       Int       @id @default(autoincrement())
  type     userType
  name     String    @db.VarChar(100)
  email    String    @unique
  password String
  doctors  Doctor[]
  patients Patient[]

  @@map("users")
}

model Patient {
  id           Int           @id @default(autoincrement())
  cpf          String        @unique
  userId       Int
  appointments Appointment[]
  users        User          @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@map("patients")
}

model Doctor {
  id           Int           @id @default(autoincrement())
  crm          String        @unique
  userId       Int
  speciality   String
  appointments Appointment[]
  users        User          @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@map("doctors")
}

model Appointment {
  id            Int         @id @default(autoincrement())
  scheduledDate DateTime?   @default(dbgenerated("CURRENT_DATE")) @db.Date
  scheduledTime DateTime?   @default(dbgenerated("CURRENT_TIME")) @db.Time(6)
  patientId     Int?
  doctorId      Int
  status        statusType? @default(free)
  doctors       Doctor      @relation(fields: [doctorId], references: [id], onDelete: Cascade, onUpdate: NoAction)
  patients      Patient?    @relation(fields: [patientId], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@map("appointments")
}

enum statusType {
  scheduled
  confirmed
  canceled
  done
  free
}

enum userType {
  patient
  doctor
}
